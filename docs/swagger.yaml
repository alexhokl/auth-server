definitions:
  api.ClientCreateRequest:
    properties:
      client_id:
        example: cli
        type: string
      client_secret:
        example: P@ssw0rd
        type: string
      redirect_uri:
        example: http://localhost:8080/callback
        type: string
      user_email:
        example: alex@test.com
        type: string
    required:
    - client_id
    - client_secret
    - redirect_uri
    - user_email
    type: object
  api.UserSignUpRequest:
    properties:
      email:
        example: alex@test.com
        type: string
      password:
        example: P@ssw0rd
        type: string
    required:
    - email
    - password
    type: object
info:
  contact: {}
  description: This API provides authentication and authorization services.
  title: Auth Server API
  version: 0.0.1
paths:
  /.well-known/openid-configuration:
    get:
      produces:
      - application/json
      responses: {}
      summary: OpenID configuration endpoint
      tags:
      - OpenID
  /.well-known/openid-configuration/jwks:
    get:
      produces:
      - application/json
      responses: {}
      summary: JSON web key set endpoint
      tags:
      - OpenID
  /.well-known/webfinger:
    get:
      produces:
      - application/jrd+json
      responses: {}
      summary: WebFinger endpoint
      tags:
      - OpenID
  /authorize:
    get:
      consumes:
      - application/x-www-form-urlencoded
      parameters:
      - description: Response type (e.g. code)
        in: query
        name: response_type
        required: true
        type: string
      - description: Client ID
        in: query
        name: client_id
        required: true
        type: string
      - description: Redirect URI
        in: query
        name: redirect_uri
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Authorize and redirect to the redirect_uri
      tags:
      - OAuth
  /clients/:
    get:
      produces:
      - application/json
      responses: {}
      summary: Lists clients
      tags:
      - clients
    patch:
      consumes:
      - application/json
      description: Patches a OAuth client (not implemented yet)
      produces:
      - application/json
      responses: {}
      summary: Patches a client
      tags:
      - clients
    post:
      consumes:
      - application/json
      description: Adds a OAuth client
      parameters:
      - description: Client details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/api.ClientCreateRequest'
      produces:
      - application/json
      responses: {}
      summary: Adds a client
      tags:
      - clients
  /signin:
    post:
      consumes:
      - application/x-www-form-urlencoded
      parameters:
      - example: alex@test.com
        in: formData
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Starts a sign in session with a user
      tags:
      - user
  /signin/challenge:
    post:
      consumes:
      - application/x-www-form-urlencoded
      parameters:
      - example: P@ssw0rd
        in: formData
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Signs in a user with a password
      tags:
      - user
  /signout:
    post:
      description: Signs out a user and deletes its email from session. Note that
        the session cookie would not be deleted.
      produces:
      - application/json
      responses: {}
      summary: Signs out a user
      tags:
      - user
  /signup:
    post:
      consumes:
      - application/json
      description: Creates a new user but it does not verify the email address yet
      parameters:
      - description: User sign up request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/api.UserSignUpRequest'
      produces:
      - application/json
      responses: {}
      summary: Creates a new user
      tags:
      - user
  /token:
    post:
      consumes:
      - application/x-www-form-urlencoded
      parameters:
      - example: cli
        in: formData
        name: client_id
        required: true
        type: string
      - example: P@ssw0rd
        in: formData
        name: client_secret
        required: true
        type: string
      - example: code
        in: formData
        name: code
        required: true
        type: string
      - example: authorization_code
        in: formData
        name: grant_type
        required: true
        type: string
      - example: http://localhost:8088
        in: formData
        name: redirect_uri
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Issues a token
      tags:
      - OAuth
swagger: "2.0"
