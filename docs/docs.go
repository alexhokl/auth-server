// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/.well-known/openid-configuration": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OpenID"
                ],
                "summary": "OpenID configuration endpoint",
                "responses": {}
            }
        },
        "/.well-known/openid-configuration/jwks": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OpenID"
                ],
                "summary": "JSON web key set endpoint",
                "responses": {}
            }
        },
        "/.well-known/webfinger": {
            "get": {
                "produces": [
                    "application/jrd+json"
                ],
                "tags": [
                    "OpenID"
                ],
                "summary": "WebFinger endpoint",
                "responses": {}
            }
        },
        "/authorize": {
            "get": {
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OAuth"
                ],
                "summary": "Authorize and redirect to the redirect_uri",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Response type (e.g. code)",
                        "name": "response_type",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Client ID",
                        "name": "client_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Redirect URI",
                        "name": "redirect_uri",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/clients/": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "clients"
                ],
                "summary": "Lists clients",
                "responses": {}
            },
            "post": {
                "description": "Adds a OAuth client",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "clients"
                ],
                "summary": "Adds a client",
                "parameters": [
                    {
                        "description": "Client details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.ClientCreateRequest"
                        }
                    }
                ],
                "responses": {}
            },
            "patch": {
                "description": "Patches a OAuth client (not implemented yet)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "clients"
                ],
                "summary": "Patches a client",
                "responses": {}
            }
        },
        "/fido/register": {
            "post": {
                "description": "This completes the dance for registering a new credential",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Verifies and creates a new credential",
                "parameters": [
                    {
                        "description": "Credential creation request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.DummyCredentialCreationData"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/fido/register/challenge": {
            "post": {
                "description": "This starts the dance for registering a new credential",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Serves a challenge for registering a new credential",
                "responses": {}
            }
        },
        "/fido/signin": {
            "post": {
                "description": "This completes the dance for sign in",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Verifies user credential and sign in",
                "parameters": [
                    {
                        "description": "Credential assertion request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.DummyCredentialAssertionData"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/fido/signin/challenge": {
            "post": {
                "description": "This starts the dance for sign in",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Serves a challenge for starting a login dance",
                "responses": {}
            }
        },
        "/signin": {
            "post": {
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Starts a sign in session with a user",
                "parameters": [
                    {
                        "type": "string",
                        "example": "alex@test.com",
                        "name": "email",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/signin/challenge": {
            "post": {
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Signs in a user with a password",
                "parameters": [
                    {
                        "type": "string",
                        "example": "P@ssw0rd",
                        "name": "password",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/signout": {
            "post": {
                "description": "Signs out a user and deletes its email from session. Note that the session cookie would not be deleted.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Signs out a user",
                "responses": {}
            }
        },
        "/signup": {
            "post": {
                "description": "Creates a new user but it does not verify the email address yet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Creates a new user",
                "parameters": [
                    {
                        "description": "User sign up request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.UserSignUpRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/token": {
            "post": {
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OAuth"
                ],
                "summary": "Issues a token",
                "parameters": [
                    {
                        "type": "string",
                        "example": "cli",
                        "name": "client_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "P@ssw0rd",
                        "name": "client_secret",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "code",
                        "name": "code",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "authorization_code",
                        "name": "grant_type",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "http://localhost:8088",
                        "name": "redirect_uri",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {}
            }
        }
    },
    "definitions": {
        "api.AttestationObject": {
            "type": "object",
            "properties": {
                "attStmt": {
                    "type": "object",
                    "additionalProperties": true
                },
                "authData": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "fmt": {
                    "type": "string"
                }
            }
        },
        "api.AttestedCredentialData": {
            "type": "object",
            "properties": {
                "aaguid": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "credential_id": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "public_key": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "api.AuthenticatorAssertionResponse": {
            "type": "object",
            "properties": {
                "authenticatorData": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "clientDataJSON": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "signature": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "userHandle": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "api.AuthenticatorAttestationResponse": {
            "type": "object",
            "properties": {
                "attestationObject": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "clientDataJSON": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "transports": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "api.AuthenticatorData": {
            "type": "object",
            "properties": {
                "att_data": {
                    "$ref": "#/definitions/api.AttestedCredentialData"
                },
                "ext_data": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "flags": {
                    "type": "integer"
                },
                "rpid": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "sign_count": {
                    "type": "integer"
                }
            }
        },
        "api.ClientCreateRequest": {
            "type": "object",
            "required": [
                "client_id",
                "client_secret",
                "redirect_uri",
                "user_email"
            ],
            "properties": {
                "client_id": {
                    "type": "string",
                    "example": "cli"
                },
                "client_secret": {
                    "type": "string",
                    "example": "P@ssw0rd"
                },
                "redirect_uri": {
                    "type": "string",
                    "example": "http://localhost:8080/callback"
                },
                "user_email": {
                    "type": "string",
                    "example": "alex@test.com"
                }
            }
        },
        "api.CollectedClientData": {
            "type": "object",
            "properties": {
                "challenge": {
                    "type": "string"
                },
                "new_keys_may_be_added_here": {
                    "type": "string"
                },
                "origin": {
                    "type": "string"
                },
                "tokenBinding": {
                    "$ref": "#/definitions/api.TokenBinding"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "api.CredentialAssertionResponse": {
            "type": "object",
            "properties": {
                "authenticatorAttachment": {
                    "type": "string"
                },
                "clientExtensionResults": {
                    "$ref": "#/definitions/api.DummyAuthenticationExtensionsClientOutputs"
                },
                "id": {
                    "type": "string"
                },
                "rawId": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "response": {
                    "$ref": "#/definitions/api.AuthenticatorAssertionResponse"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "api.CredentialCreationResponse": {
            "type": "object",
            "properties": {
                "authenticatorAttachment": {
                    "type": "string"
                },
                "clientExtensionResults": {
                    "$ref": "#/definitions/api.DummyAuthenticationExtensionsClientOutputs"
                },
                "id": {
                    "type": "string"
                },
                "rawId": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "response": {
                    "$ref": "#/definitions/api.AuthenticatorAttestationResponse"
                },
                "transports": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "api.DummyAuthenticationExtensionsClientOutputs": {
            "type": "object",
            "additionalProperties": true
        },
        "api.DummyCredentialAssertionData": {
            "type": "object",
            "properties": {
                "authenticatorAttachment": {
                    "type": "string"
                },
                "clientExtensionResults": {
                    "$ref": "#/definitions/api.DummyAuthenticationExtensionsClientOutputs"
                },
                "id": {
                    "type": "string"
                },
                "raw": {
                    "$ref": "#/definitions/api.CredentialAssertionResponse"
                },
                "rawId": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "response": {
                    "$ref": "#/definitions/api.ParsedAssertionResponse"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "api.DummyCredentialCreationData": {
            "type": "object",
            "properties": {
                "authenticatorAttachment": {
                    "type": "string"
                },
                "clientExtensionResults": {
                    "$ref": "#/definitions/api.DummyAuthenticationExtensionsClientOutputs"
                },
                "id": {
                    "type": "string"
                },
                "raw": {
                    "$ref": "#/definitions/api.CredentialCreationResponse"
                },
                "rawId": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "response": {
                    "$ref": "#/definitions/api.DummyParsedAttestationResponse"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "api.DummyParsedAttestationResponse": {
            "type": "object",
            "properties": {
                "attestationObject": {
                    "$ref": "#/definitions/api.AttestationObject"
                },
                "collectedClientData": {
                    "$ref": "#/definitions/api.CollectedClientData"
                },
                "transports": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "api.ParsedAssertionResponse": {
            "type": "object",
            "properties": {
                "authenticatorData": {
                    "$ref": "#/definitions/api.AuthenticatorData"
                },
                "collectedClientData": {
                    "$ref": "#/definitions/api.CollectedClientData"
                },
                "signature": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "userHandle": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "api.TokenBinding": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "api.UserSignUpRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "alex@test.com"
                },
                "password": {
                    "type": "string",
                    "example": "P@ssw0rd"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.0.1",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Auth Server API",
	Description:      "This API provides authentication and authorization services.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
